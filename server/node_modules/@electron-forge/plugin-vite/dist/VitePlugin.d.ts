import { PluginBase } from '@electron-forge/plugin-base';
import type { VitePluginConfig } from './Config';
import type { ForgeMultiHookMap, ResolvedForgeConfig } from '@electron-forge/shared-types';
export default class VitePlugin extends PluginBase<VitePluginConfig> {
    private static alreadyStarted;
    name: string;
    private isProd;
    private projectDir;
    private baseDir;
    private configGeneratorCache;
    private watchers;
    private servers;
    init: (dir: string) => void;
    setDirectories(dir: string): void;
    private get configGenerator();
    getHooks: () => ForgeMultiHookMap;
    resolveForgeConfig: (forgeConfig: ResolvedForgeConfig) => Promise<ResolvedForgeConfig>;
    packageAfterCopy: (_forgeConfig: ResolvedForgeConfig, buildPath: string) => Promise<void>;
    build: () => Promise<void>;
    buildRenderer: () => Promise<void>;
    launchRendererDevServers: () => Promise<void>;
    exitHandler: (options: {
        cleanup?: boolean;
        exit?: boolean;
    }, err?: Error) => void;
}
export { VitePlugin };
//# sourceMappingURL=VitePlugin.d.ts.map